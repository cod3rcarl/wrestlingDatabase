The end goal is to create an energiser score tracker. It must have a database to hold storage and a model folder
to store all of our functions. Must have a rest api to manage requests. Also, a webpage that shows results. 

We want to store all bootcampers names in the database (names should be in an array). 
The front-end should have an input that selects bootcampers names. 
When bootcampers names are selected a board is displayed with winning details.
The database should be updated with their score. 

1. Set up the front-end. DONE
Set up an index.html file that contains; DONE
H1 (Expressox2 Energiser Scoreboard); DONE
P tag with bootcampers names, P tag with score and P tag with game; DONE
Input to select bootcampers; DONE
Create a Button to display a single bootcampers info; DONE
Dropdown with list of energisers; DONE
Create ID for all the P tags, Input, Buttons and Dropdown; DONE

2. Set up javaScript.
Create main.js file; DONE
Create a function that takes the value of the input from the input field. We want to display that value
inside our bootcampers name P tag. DONE
Create a second function that takes the value from the dropdown menu. We want to display that value inside
our game P tag. DONE
addEventListeners to each of the button. DONE

STILL TO BE COMPLETED!!!!
Create a third function that when name and game is selected and button is clicked the function will update the
score and display it in our score P tag. Include (count++).
- Target the score id and update innerText to increment the score key from the array
- If bootcamper id value is equal to name key in bootcampers array, then score InnerText = score key in bootcampers array + 1
- Loop/map through the array to find the value input and target the score

3. Set up the back-end.
Set up a Heroku database; DONE
Set up app.js file - install express, node, postGres, .env; DONE
Create table with bootcampers names - ID, Name, Score; DONE
Create functions - getAllBootcampers, getBootcampersByName, updateBootcamperScore;
import functions from bootcamper model and create router.get and router.post 

3.5. Link back-end to front-end
Grab the data from the database and display it in a table on our web page
    - Get data to display on the webpage
    - Fetch data DONE
    - Back-end to receive data DONE
    - Extract the data from the objects in the array
    - 

4. If we have time
Set up CSS; DONE
DIV container with a scoreboard (Jumbotron); DONE
Create a second Button that will display all the bootcampers info; DONE
Create a section that hold all the bootcampers details (essentially we want to display our database on the DONE
web page - only when the second button is clicked); DONE







